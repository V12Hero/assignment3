{"ast":null,"code":"var _jsxFileName = \"/home/v12hero/Desktop/Assignment3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setSelectedFile(file);\n\n    // Automatically send the selected file to the backend\n    sendFileToBackend(file);\n  };\n  const sendFileToBackend = async file => {\n    try {\n      const formData = new FormData();\n      formData.append('image', file);\n\n      // Update the URL to match your backend endpoint\n      const apiUrl = 'http://localhost:5000/classify'; // Change this URL accordingly\n\n      const response = await axios.post(apiUrl, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Backend Response:', response.data);\n    } catch (error) {\n      console.error('Error sending file to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Image Classifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","handleFileChange","e","file","target","files","sendFileToBackend","formData","FormData","append","apiUrl","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/home/v12hero/Desktop/Assignment3/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file);\n\n    // Automatically send the selected file to the backend\n    sendFileToBackend(file);\n  };\n\n  const sendFileToBackend = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append('image', file);\n\n      // Update the URL to match your backend endpoint\n      const apiUrl = 'http://localhost:5000/classify'; // Change this URL accordingly\n\n      const response = await axios.post(apiUrl, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log('Backend Response:', response.data);\n    } catch (error) {\n      console.error('Error sending file to backend:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Image Classifier</h1>\n        <input type=\"file\" onChange={handleFileChange} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BL,eAAe,CAACG,IAAI,CAAC;;IAErB;IACAG,iBAAiB,CAACH,IAAI,CAAC;EACzB,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAOH,IAAI,IAAK;IACxC,IAAI;MACF,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,IAAI,CAAC;;MAE9B;MACA,MAAMO,MAAM,GAAG,gCAAgC,CAAC,CAAC;;MAEjD,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACF,MAAM,EAAEH,QAAQ,EAAE;QAClDM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBvB,OAAA;MAAQsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BvB,OAAA;QAAAuB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB3B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAExB;MAAiB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACzB,EAAA,CAvCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}